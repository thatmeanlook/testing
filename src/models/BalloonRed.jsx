/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Akinremi (https://sketchfab.com/Akinremi)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/hot-air-balloon-a3a8a6abc7ef4f8bb01711818421ed5d
Title: Hot Air Balloon
*/

import React, { useEffect, useRef } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import scene from '../assets/3d/balloonBlue.glb'
import { useFrame } from "@react-three/fiber";


const BalloonRed = ({ props }) => {
    const group = useRef();
    const { nodes, materials, animations } = useGLTF(scene);
    // const { nodes, materials, animations } = useGLTF("../assets/3d/hot_air_balloon.glb");
    const { actions } = useAnimations(animations, group);


    useEffect(() => {

        actions['Action'].setDuration(20).play();

    }, [])



    useFrame(({ clock, camera }) => {
        // Update the Y position to simulate balloon-like motion using a sine wave
        group.current.position.y = Math.sin(clock.elapsedTime) * 0.2 + 4;

        // Check if the balloon reached a certain endpoint relative to the camera
        if (group.current.position.x > camera.position.x + 10) {
            // Change direction to backward and rotate the balloon 180 degrees on the y-axis
            group.current.rotation.y = Math.PI;
        } else if (group.current.position.x < camera.position.x - 10) {
            // Change direction to forward and reset the balloon's rotation
            group.current.rotation.y = 0;
        }

        // Update the X and Z positions based on the direction
        if (group.current.rotation.y === 0) {
            // Moving forward
            group.current.position.x += 0.01;
            group.current.position.z -= 0.01;
        } else {
            // Moving backward
            group.current.position.x -= 0.01;
            group.current.position.z += 0.01;
        }
    });

    useFrame((_, delta) => {
        group.current.rotation.Y += 0.15 * delta;
    })


    return (
        <group ref={group} {...props} dispose={null}>
            <group name="Sketchfab_Scene">
                <group name="Sketchfab_model"
                    rotation={[-Math.PI / 2, 0, 0]}
                    position={[-15, 4, -11]}
                >
                    <group name="root">
                        <group name="GLTF_SceneRootNode" rotation={[Math.PI / 2, 0, 0]}>
                            <group name="Cube_1" position={[0, -3.619, 0]} scale={0.222}>
                                <mesh
                                    name="Object_4"
                                    castShadow
                                    receiveShadow
                                    geometry={nodes.Object_4.geometry}
                                    material={materials["Material.004"]}
                                />

                                <mesh
                                    name="Object_5" // STRIPE
                                    castShadow
                                    receiveShadow
                                    geometry={nodes.Object_5.geometry}
                                    material={materials["Material.001"]}
                                // material-color={'#d97390'} // ADJUST STRIPE COLOR

                                />


                                <mesh
                                    name="Object_6" // STRIPE
                                    castShadow
                                    receiveShadow
                                    geometry={nodes.Object_6.geometry}
                                    material={materials["Material.002"]}
                                // material-color={'#d9bc73'} // ADJUST STRIPE COLOR
                                />

                                <mesh
                                    name="Object_7" // STRINGS
                                    castShadow
                                    receiveShadow
                                    geometry={nodes.Object_7.geometry}
                                    material={materials["Material.003"]}

                                />
                            </group>
                        </group>
                    </group>
                </group>
            </group>
        </group>
    );
}

useGLTF.preload("/balloonBlue.glb");

export default BalloonRed